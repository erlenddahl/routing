using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using Microsoft.Extensions.Configuration;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Newtonsoft.Json.Linq;
using RoutingApi.Controllers;
using RoutingApi.Geometry;
using RoutingApi.Helpers;

namespace RoutingApi.Tests
{
    [TestClass]
    public class RoutingTests
    {
        [TestInitialize]
        public void Init()
        {
            LocalDijkstraRoutingService.NetworkFile = "C:\\Users\\erlendd\\Desktop\\vegnettRuteplan_FGDB_20210528_tolerance-0001.bin";
            LocalDijkstraRoutingService.Initialize();
        }

        private JToken SendRequest(RoutingRequest request)
        {
            var ctrl = new RoutingController(null);
            return JToken.FromObject(ctrl.FindRoute(request));
        }

        [TestMethod]
        public void SingleRoute()
        {
            var response = SendRequest(new RoutingRequest()
            {
                Request = new[]
                {
                    new LatLng() { Lat = 63.413602, Lng = 10.412028 },
                    new LatLng() { Lat = 63.399147, Lng = 10.350386 }
                }
            });

            Assert.AreEqual(7986, response.Value<double>("distance"), 0.5);
            Assert.AreEqual(315, response.Value<JArray>("coordinates").Count);
            Assert.AreEqual(106, response.Value<JArray>("linkReferences").Count);

            var referenceString = "0,44359431-0,56680816@42549-2;0,32109657-0,44359431@42549-2;0,20485698-0,32109657@42549-2;0,00000000-0,22635655@73761;0,22635655-1,00000000@73761;0,04304727-0,48876644@42636;0,00000000-1,00000000@1872608;0,17841473-0,32348179@73312;0,32348179-0,50106740@73312;0,50106740-0,69600039@73312;0,69793501-0,92848608@73312;0,92848608-0,98055478@73312;0,98055478-1,00000000@73312;0,97756353-1,00000000@42139;0,00000000-0,94700608@72203;0,00000000-1,00000000@72968;0,10650752-0,12655375@73450-2;0,05722096-0,10650752@73450-2;0,05616975-0,05722096@73450-2;0,05560081-0,05616975@73450-2;0,05022823-0,05548940@73450-2;0,03224533-0,05011681@73450-2;0,02357341-0,03224533@73450-2;0,01899394-0,02357341@73450-2;0,00000000-0,01899394@73450-2;0,00000000-1,00000000@72889;0,00945538-0,04731090@72154;0,04731090-0,06547841@72154;0,06547841-0,48156427@72154;0,00000000-0,03958896@72199;0,03958896-0,36151014@72199;0,00000000-1,00000000@3247519;0,30098791-0,41569939@72374-2;0,08407433-0,30098791@72374-2;0,05121158-0,08407433@72374-2;0,00000000-0,05121158@72374-2;0,00000000-1,00000000@73045-2;0,82934006-0,90170152@72863-2;0,50935552-0,82934006@72863-2;0,26964583-0,50684014@72863-2;0,05200186-0,26964583@72863-2;0,01619565-0,05200186@72863-2;0,43186404-0,84328314@73035;0,00000000-0,18988309@3312541;0,88729767-1,00000000@73035;0,50888854-0,54308788@72359;0,00000000-1,00000000@3307697;0,00000000-0,20857597@3307703;0,00000000-1,00000000@3307696;0,55515951-0,57620011@72359;0,57620011-0,60320644@72359;0,60320644-0,62660189@72359;0,00000000-1,00000000@3307693;0,33986083-0,64224896@3307702-2;0,00000000-1,00000000@3307691;0,64590421-0,78069207@72359;0,78069207-0,93983892@72359;0,93989176-0,97345610@72359;0,00000000-0,14795661@2245449;0,00000000-1,00000000@2245451;0,57564368-0,78545648@2245447-2;0,00000000-0,39282725@2245455;0,39282725-0,66540759@2245455;0,66540759-1,00000000@2245455;0,75830342-0,89961516@72373-2;0,00000000-1,00000000@73609;0,01495487-0,09048365@41468;0,09048365-0,16300194@41468;0,16300194-0,19219610@41468;0,19219610-0,19627710@41468;0,19627710-0,20511546@41468;0,20511546-0,21462401@41468;0,21462401-0,21979454@41468;0,22024348-0,30161639@41468;0,30161639-0,30432082@41468;0,30432082-0,40704552@41468;0,40704552-0,44720468@41468;0,44720468-0,61305214@41468;0,61305214-0,65196852@41468;0,65196852-0,65844882@41468;0,65844882-0,68593512@41468;0,68593512-0,74470319@41468;0,74470319-0,79009119@41468;0,79009119-0,89814853@41468;0,89814853-0,90083876@41468;0,90083876-0,97063646@41468;0,97063646-0,99017476@41468;0,00000000-1,00000000@73610;0,40775758-0,54052433@41461-2;0,00000000-0,20343663@73599;0,20343663-1,00000000@73599;0,12950674-0,42308305@41452;0,42308305-0,46895435@41452;0,46895435-0,82216335@41452;0,00000000-0,84220154@73124;0,84220154-1,00000000@73124;0,00000000-0,18106356@41462;0,00000000-0,66648061@73157;0,67214291-1,00000000@73157;0,02547033-0,11338217@41640;0,11338217-0,21085491@41640;0,21085491-0,29209069@41640;0,29209069-0,50698440@41640;0,00000000-0,31412913@41565;0,31412913-0,56417536@41565;0,00000000-0,01570230@42494";
            Assert.AreEqual(referenceString, string.Join(";", response["linkReferences"].ToObject<string[]>()));
        }

        [TestMethod]
        public void MultipleIdenticalRoutes()
        {
            var responses = SendRequest(new RoutingRequest()
            {
                Requests = Enumerable.Range(0, 20)
                    .Select(p => new[]
                    {
                        new LatLng() { Lat = 63.413602, Lng = 10.412028 },
                        new LatLng() { Lat = 63.399147, Lng = 10.350386 }
                    })
                    .ToArray()
            });

            Assert.AreEqual(20, responses.Count());

            foreach (var response in responses)
            {
                Assert.AreEqual(7986, response.Value<double>("distance"), 0.5);
                Assert.AreEqual(315, response.Value<JArray>("coordinates").Count);
                Assert.AreEqual(106, response.Value<JArray>("linkReferences").Count);

                var referenceString = "0,44359431-0,56680816@42549-2;0,32109657-0,44359431@42549-2;0,20485698-0,32109657@42549-2;0,00000000-0,22635655@73761;0,22635655-1,00000000@73761;0,04304727-0,48876644@42636;0,00000000-1,00000000@1872608;0,17841473-0,32348179@73312;0,32348179-0,50106740@73312;0,50106740-0,69600039@73312;0,69793501-0,92848608@73312;0,92848608-0,98055478@73312;0,98055478-1,00000000@73312;0,97756353-1,00000000@42139;0,00000000-0,94700608@72203;0,00000000-1,00000000@72968;0,10650752-0,12655375@73450-2;0,05722096-0,10650752@73450-2;0,05616975-0,05722096@73450-2;0,05560081-0,05616975@73450-2;0,05022823-0,05548940@73450-2;0,03224533-0,05011681@73450-2;0,02357341-0,03224533@73450-2;0,01899394-0,02357341@73450-2;0,00000000-0,01899394@73450-2;0,00000000-1,00000000@72889;0,00945538-0,04731090@72154;0,04731090-0,06547841@72154;0,06547841-0,48156427@72154;0,00000000-0,03958896@72199;0,03958896-0,36151014@72199;0,00000000-1,00000000@3247519;0,30098791-0,41569939@72374-2;0,08407433-0,30098791@72374-2;0,05121158-0,08407433@72374-2;0,00000000-0,05121158@72374-2;0,00000000-1,00000000@73045-2;0,82934006-0,90170152@72863-2;0,50935552-0,82934006@72863-2;0,26964583-0,50684014@72863-2;0,05200186-0,26964583@72863-2;0,01619565-0,05200186@72863-2;0,43186404-0,84328314@73035;0,00000000-0,18988309@3312541;0,88729767-1,00000000@73035;0,50888854-0,54308788@72359;0,00000000-1,00000000@3307697;0,00000000-0,20857597@3307703;0,00000000-1,00000000@3307696;0,55515951-0,57620011@72359;0,57620011-0,60320644@72359;0,60320644-0,62660189@72359;0,00000000-1,00000000@3307693;0,33986083-0,64224896@3307702-2;0,00000000-1,00000000@3307691;0,64590421-0,78069207@72359;0,78069207-0,93983892@72359;0,93989176-0,97345610@72359;0,00000000-0,14795661@2245449;0,00000000-1,00000000@2245451;0,57564368-0,78545648@2245447-2;0,00000000-0,39282725@2245455;0,39282725-0,66540759@2245455;0,66540759-1,00000000@2245455;0,75830342-0,89961516@72373-2;0,00000000-1,00000000@73609;0,01495487-0,09048365@41468;0,09048365-0,16300194@41468;0,16300194-0,19219610@41468;0,19219610-0,19627710@41468;0,19627710-0,20511546@41468;0,20511546-0,21462401@41468;0,21462401-0,21979454@41468;0,22024348-0,30161639@41468;0,30161639-0,30432082@41468;0,30432082-0,40704552@41468;0,40704552-0,44720468@41468;0,44720468-0,61305214@41468;0,61305214-0,65196852@41468;0,65196852-0,65844882@41468;0,65844882-0,68593512@41468;0,68593512-0,74470319@41468;0,74470319-0,79009119@41468;0,79009119-0,89814853@41468;0,89814853-0,90083876@41468;0,90083876-0,97063646@41468;0,97063646-0,99017476@41468;0,00000000-1,00000000@73610;0,40775758-0,54052433@41461-2;0,00000000-0,20343663@73599;0,20343663-1,00000000@73599;0,12950674-0,42308305@41452;0,42308305-0,46895435@41452;0,46895435-0,82216335@41452;0,00000000-0,84220154@73124;0,84220154-1,00000000@73124;0,00000000-0,18106356@41462;0,00000000-0,66648061@73157;0,67214291-1,00000000@73157;0,02547033-0,11338217@41640;0,11338217-0,21085491@41640;0,21085491-0,29209069@41640;0,29209069-0,50698440@41640;0,00000000-0,31412913@41565;0,31412913-0,56417536@41565;0,00000000-0,01570230@42494";
                Assert.AreEqual(referenceString, string.Join(";", response["linkReferences"].ToObject<string[]>()));
            }
        }
    }
}
